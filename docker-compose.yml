version: '3.8'

services:
  app:
    build: .
    volumes:
      - .:/app
      - ./data:/app/data
      - ./db:/app/db
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/weather_db
      - ENVIRONMENT=development
      - LOG_LEVEL=INFO
      - LOG_FILE=/app/logs/app.log
      - FLASK_APP=app:create_app()
      - FLASK_ENV=development
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - weather-network
    command: flask run --host=0.0.0.0

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=weather_db
    ports:
      - "5432:5432"
    networks:
      - weather-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  weather-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local 